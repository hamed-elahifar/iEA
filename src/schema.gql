# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Activity {
  """"""
  _id: ID
  company: Company!
  createAt: Date!
  deletedAt: Date!
  description: String!
  jobPosition: JobPosition!
  title: String!
  type: typeEnum!
  updatedAt: Date!
}

type Company {
  _id: String!
  createAt: Date!
  deletedAt: Date
  holding: Holding
  mission: String
  name: String!
  updatedAt: Date!
  vision: String
}

input CreateActivityInput {
  company: String!
  description: String
  position: String!
  title: String!
  type: String!
}

input CreateCompanyInput {
  holding: String
  mission: String
  name: String!
  vision: String
}

input CreateDepartmentInput {
  company: String!
  description: String
  name: String!
  parent: String
  supervisor: String
}

input CreateHoldingInput {
  name: String!
}

input CreateJobPositionInput {
  company: String!
  department: String!
  supervisor: String!
  title: String!
}

input CreateStaffInput {
  company: String!
  email: String
  firstname: String
  lastname: String
  nationalNumber: String
  password: String
  phone: String
  position: String
  staffId: String
  username: String!
}

"""Date custom scalar type"""
scalar Date

type Department {
  _id: String
  company: Company!
  createAt: Date!
  deletedAt: Date
  description: String
  members: Staff!
  name: String!
  parent: Department!
  supervisor: Staff!
  updatedAt: Date!
}

type Holding {
  _id: String!
  createAt: Date!
  deletedAt: Date
  name: String!
  updatedAt: Date!
}

type JobPosition {
  company: Company!
  createAt: Date!
  deletedAt: Date!
  organizationLevel: OrganizationLevelEnum!
  owner: Staff!
  title: String!
  updatedAt: Date!
}

type Mutation {
  createActivity(createActivityInput: CreateActivityInput!): Activity
  createCompany(createCompanyInput: CreateCompanyInput!): Company
  createDepartment(createDepartmentInput: CreateDepartmentInput!): Department
  createHolding(createHoldingInput: CreateHoldingInput!): Holding
  createJobPosition(createJobPositionInput: CreateJobPositionInput!): JobPosition
  createStaff(createStaffInput: CreateStaffInput!): Staff
  removeActivity(id: ID!): Activity!
  removeCompany(id: ID!): Company!
  removeDepartment(id: ID!): Department!
  removeHolding(id: ID!): Holding!
  removeJobPosition(id: ID!): JobPosition!
  removeStaff(id: ID!): Staff!
  updateActivity(id: ID!, updateActivityInput: UpdateActivityInput!): Activity!
  updateCompany(id: ID!, updateCompanyInput: UpdateCompanyInput!): Company!
  updateDepartment(id: ID!, updateDepartmentInput: UpdateDepartmentInput!): Department!
  updateHolding(id: ID!, updateHoldingInput: UpdateHoldingInput!): Holding!
  updateJobPosition(id: ID!, updateJobPositionInput: UpdateJobPositionInput!): JobPosition!
  updateStaff(id: ID!, updateStaffInput: UpdateStaffInput!): Staff!
}

"""Organization Level"""
enum OrganizationLevelEnum {
  ASSOCIATE
  EMPLOYEE
  EXPERT
  MANAGEMENT
  PRESIDENCY
  RESPONSIBLE
  SUPERIOR
  TECHNICIAN
  WORKER
}

input PaginationArgs {
  limit: Int = 10
  offset: Int = 0
}

type Query {
  findAllActivity(PaginationArgs: PaginationArgs!): [Activity!]
  findAllCompany(PaginationArgs: PaginationArgs!): [Company!]
  findAllDepartment(PaginationArgs: PaginationArgs!): [Department!]
  findAllHolding(PaginationArgs: PaginationArgs!): [Holding!]
  findAllJobPosition(PaginationArgs: PaginationArgs!): [JobPosition!]
  findAllStaff(PaginationArgs: PaginationArgs!): [Staff!]
  findOneActivity(id: ID!): Activity
  findOneCompany(id: ID!): Company
  findOneDepartment(id: ID!): Department
  findOneHolding(id: ID!): Holding
  findOneJobPosition(id: ID!): JobPosition
  findOneStaff(id: ID!): Staff
}

type Staff {
  _id: String!
  company: Company!
  createAt: Date!
  deletedAt: Date
  email: String
  firstname: String
  jobPosition: String
  lastname: String
  nationalNumber: String
  password: String
  personalID: String
  phone: String
  updatedAt: Date!
  username: String!
}

input UpdateActivityInput {
  description: String
  position: String
  title: String
  type: String
}

input UpdateCompanyInput {
  holding: String
  mission: String
  name: String
  vision: String
}

input UpdateDepartmentInput {
  description: String
  name: String
  supervisor: String
}

input UpdateHoldingInput {
  name: String
}

input UpdateJobPositionInput {
  department: String
  supervisor: String
  title: String
}

input UpdateStaffInput {
  firstname: String
  lastname: String
  nationalNumber: String
  password: String
  position: String
  staffId: String
}

enum typeEnum {
  CONTROL
  EXECUTIVE
}